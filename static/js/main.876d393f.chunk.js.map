{"version":3,"sources":["components/ErrorMessage.tsx","components/Form.tsx","App.tsx","index.tsx"],"names":["ErrorMessage","message","EMAIL_REGEX","RegExp","FormControl","state","firstName","secondName","email","category","img","errors","name","validateField","field","imgSize","size","match","setState","length","onTextChange","event","target","value","trim","onSelectChnage","onImageChange","a","input","files","file","checkFormCompletion","onSubmit","preventDefault","returnState","convertFileToBase64","then","result","alert","JSON","stringify","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","this","validForm","console","log","className","type","onChange","selected","hidden","placeholder","cols","rows","accept","Object","values","map","error","i","key","disabled","onClick","React","App","Form","ReactDOM","render","document","getElementById"],"mappings":"ySAQeA,EAFuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAKA,I,mjBCH5D,IAAMC,EAAc,IAAIC,OACtB,2IAsNaC,E,2MAzLbC,MAAe,CACbC,UAAW,GACXC,WAAY,GACZC,MAAO,GACPC,SAAU,GACVR,QAAS,GACTS,IAAK,KACLC,OAAQ,CACNC,KAAM,QACNF,IAAK,QACLF,MAAO,QACPC,SAAU,QACVR,QAAS,U,EAKLY,cAAgB,SAACC,GAAyB,IAAD,EACkB,EAAKT,MAA9DC,EADuC,EACvCA,UAAWC,EAD4B,EAC5BA,WAAYC,EADgB,EAChBA,MAAOC,EADS,EACTA,SAAUR,EADD,EACCA,QAASS,EADV,EACUA,IACnDK,EAAUL,EAAMA,EAAIM,KAAO,KAAO,KAAO,EAE/C,OAAQF,GACN,IAAK,QACFN,EAAMS,MAAMf,GAET,EAAKgB,SAAS,CAAEP,OAAO,EAAD,GAAO,EAAKN,MAAMM,OAAlB,CAA0BH,MAAO,OADvD,EAAKU,SAAS,CAAEP,OAAO,EAAD,GAAO,EAAKN,MAAMM,OAAlB,CAA0BH,MAAO,gNAE3D,MACF,IAAK,YACL,IAAK,aACDF,GAAaC,EAEX,EAAKW,SAAS,CAAEP,OAAO,EAAD,GAAO,EAAKN,MAAMM,OAAlB,CAA0BC,KAAM,OADtD,EAAKM,SAAS,CAAEP,OAAO,EAAD,GAAO,EAAKN,MAAMM,OAAlB,CAA0BC,KAAM,2MAE1D,MACF,IAAK,WACFH,EAEG,EAAKS,SAAS,CAAEP,OAAO,EAAD,GAAO,EAAKN,MAAMM,OAAlB,CAA0BF,SAAU,OAD1D,EAAKS,SAAS,CAAEP,OAAO,EAAD,GAAO,EAAKN,MAAMM,OAAlB,CAA0BF,SAAU,wLAE9D,MACF,IAAK,UACHR,EAAQkB,OAAS,GACb,EAAKD,SAAS,CACZP,OAAO,EAAD,GAAO,EAAKN,MAAMM,OAAlB,CAA0BV,QAAS,yPAE3C,EAAKiB,SAAS,CAAEP,OAAO,EAAD,GAAO,EAAKN,MAAMM,OAAlB,CAA0BV,QAAS,OAC7D,MACF,IAAK,MACHc,EAAU,EACN,EAAKG,SAAS,CACZP,OAAO,EAAD,GAAO,EAAKN,MAAMM,OAAlB,CAA0BD,IAAK,qOAEvC,EAAKQ,SAAS,CAAEP,OAAO,EAAD,GAAO,EAAKN,MAAMM,OAAlB,CAA0BD,IAAK,OACzD,MACF,QACE,S,EAKEU,aAAe,SAACC,GAA4E,IAAD,EAClEA,EAAMC,OAAvBR,EADmF,EACzFF,KAAaW,EAD4E,EAC5EA,MACrB,EAAKL,SAAL,KAAmB,EAAKb,MAAxB,eAAgCS,EAAQS,EAAMC,SAAU,kBAAM,EAAKX,cAAcC,M,EAI3EW,eAAiB,SAACJ,GAAuD,IAAD,EAC/CA,EAAMC,OAAvBR,EADgE,EACtEF,KAAaW,EADyD,EACzDA,MACrB,EAAKV,cAAcC,GACnB,EAAKI,SAAL,KAAmB,EAAKb,MAAxB,eAAgCS,EAAQS,IAAS,kBAAM,EAAKV,cAAcC,M,EAIpEY,c,sCAAgB,WAAOL,GAAP,iBAAAM,EAAA,0DAChBC,EAAQP,EAAMC,QACVO,MAFY,uBAGdC,EAAOF,EAAMC,MAAM,GAHL,SAId,EAAKX,SAAL,KAAmB,EAAKb,MAAxB,CAA+BK,IAAKoB,IAAQ,WAChD,EAAKjB,cAAc,SALD,OAOU,KAA1B,EAAKR,MAAMM,OAAOD,MACpBkB,EAAML,MAAQ,GACd,EAAKL,SAAL,KAAmB,EAAKb,MAAxB,CAA+BK,IAAK,SATlB,yC,wDAehBqB,oBAAsB,WAC5B,IAAMpB,EAAS,EAAKN,MAAMM,OAC1B,QAAQA,EAAOH,OAAUG,EAAOF,UAAaE,EAAOV,SAAYU,EAAOC,O,EAGjEoB,SAAW,SAACX,GAA4B,IAAD,EACoB,EAAKhB,MAA9DC,EADqC,EACrCA,UAAWC,EAD0B,EAC1BA,WAAYC,EADc,EACdA,MAAOC,EADO,EACPA,SAAUR,EADH,EACGA,QAASS,EADZ,EACYA,IACzDW,EAAMY,iBACN,IAAIC,EAA0B,CAAE5B,YAAWC,aAAYC,QAAOC,WAAUR,UAASS,IAAK,MAClFA,EACF,EAAKyB,oBAAoBzB,GACtB0B,KAAK,SAAAC,GACJH,EAAYxB,IAAM2B,IAEnBD,KAAK,kBAAME,MAAM,+HAAD,OAAiCC,KAAKC,UAAUN,OAEnEI,MAAM,+HAAD,OAAiCC,KAAKC,UAAUN,M,EAIzDC,oBAAsB,SAACzB,GACrB,OAAO,IAAI+B,QAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcpC,GACrBkC,EAAOG,OAAS,kBAAML,EAAQE,EAAOP,Y,wEAKvC,IAAM1B,EAASqC,KAAK3C,MAAMM,OACpBsC,EAAYD,KAAKjB,sBAEvB,OADAmB,QAAQC,IAAIxC,GAEV,uBAAKyC,UAAU,YACb,wBAAMA,UAAU,QACd,uBAAKA,UAAU,eACb,yBAAOA,UAAU,qBAAjB,sBACA,yBAAOA,UAAU,6BAA6BC,KAAK,OAAOzC,KAAK,YAAY0C,SAAUN,KAAK5B,gBAE5F,uBAAKgC,UAAU,eACb,yBAAOA,UAAU,qBAAjB,8CACA,yBAAOA,UAAU,cAAcC,KAAK,OAAOzC,KAAK,aAAa0C,SAAUN,KAAK5B,gBAE9E,uBAAKgC,UAAU,eACb,yBAAOA,UAAU,gDAAjB,SACA,yBAAOA,UAAU,cAAcC,KAAK,QAAQzC,KAAK,QAAQ0C,SAAUN,KAAK5B,gBAE1E,uBAAKgC,UAAU,eACb,yBAAOA,UAAU,gDAAjB,6EACA,0BAAQA,UAAU,SAASxC,KAAK,WAAW0C,SAAUN,KAAKvB,gBACxD,0BAAQF,MAAM,GAAGgC,UAAQ,EAACC,QAAM,GAAhC,uEAGA,0BAAQJ,UAAU,iBAAiB7B,MAAM,wCAAzC,wCAGA,0BAAQ6B,UAAU,iBAAiB7B,MAAM,kFAAzC,oFAKJ,uBAAK6B,UAAU,eACb,yBAAOA,UAAU,gDAAjB,0DACA,4BACEA,UAAU,cACVxC,KAAK,UACL6C,YAAY,mKACZC,KAAM,GACNC,KAAM,GACNL,SAAUN,KAAK5B,gBAGnB,uBAAKgC,UAAU,eACb,yBAAOA,UAAU,qBAAjB,sEACA,yBACEA,UAAU,kBACVC,KAAK,OACLzC,KAAK,QACLgD,OAAO,kBACPN,SAAUN,KAAKtB,iBAGnB,uBAAK0B,UAAU,eACb,sBAAIA,UAAU,gBACXS,OAAOC,OAAOnD,GAAQoD,IAAI,SAACC,EAAOC,GACjC,GAAc,UAAVD,GAA+B,KAAVA,EAAc,OAAO,gBAAC,EAAD,CAAcE,IAAKD,EAAGhE,QAAS+D,QAKnF,0BAAQZ,UAAU,sBAAsBe,UAAWlB,EAAWmB,QAASpB,KAAKhB,UAA5E,gE,GAjLgBqC,aCpBXC,EARO,WACpB,OACE,yBAAKlB,UAAU,OACb,kBAACmB,EAAD,QCHNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.876d393f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface Props {\r\n  message: string;\r\n}\r\n\r\nconst ErrorMessage: React.FC<Props> = ({ message }) => <li>{message}</li>;\r\n\r\nexport default ErrorMessage;\r\n","import * as React from 'react';\r\nimport ErrorMessage from './ErrorMessage';\r\n\r\nconst EMAIL_REGEX = new RegExp(\r\n  /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/,\r\n);\r\n\r\ninterface State {\r\n  firstName: string;\r\n  secondName: string;\r\n  email: string;\r\n  category: string;\r\n  message: string;\r\n  img: File | null;\r\n  errors: {\r\n    name: string;\r\n    img: string;\r\n    email: string;\r\n    category: string;\r\n    message: string;\r\n  };\r\n}\r\n\r\ninterface finalState {\r\n  firstName: string;\r\n  secondName: string;\r\n  email: string;\r\n  category: string;\r\n  message: string;\r\n  img: string | null | ArrayBuffer;\r\n}\r\n\r\nclass FormControl extends React.Component<{}, State> {\r\n  state: State = {\r\n    firstName: '',\r\n    secondName: '',\r\n    email: '',\r\n    category: '',\r\n    message: '',\r\n    img: null,\r\n    errors: {\r\n      name: 'empty',\r\n      img: 'empty',\r\n      email: 'empty',\r\n      category: 'empty',\r\n      message: 'empty',\r\n    },\r\n  };\r\n\r\n  // проверка корректности заполнения поля\r\n  private validateField = (field: string): void => {\r\n    const { firstName, secondName, email, category, message, img } = this.state;\r\n    const imgSize = img ? img.size / 1024 / 1024 : 0;\r\n\r\n    switch (field) {\r\n      case 'email':\r\n        !email.match(EMAIL_REGEX)\r\n          ? this.setState({ errors: { ...this.state.errors, email: 'Некорректный адрес электронной почты' } })\r\n          : this.setState({ errors: { ...this.state.errors, email: '' } });\r\n        break;\r\n      case 'firstName':\r\n      case 'secondName':\r\n        !(firstName || secondName)\r\n          ? this.setState({ errors: { ...this.state.errors, name: 'Необходимо заполнить имя или фамилию' } })\r\n          : this.setState({ errors: { ...this.state.errors, name: '' } });\r\n        break;\r\n      case 'category':\r\n        !category\r\n          ? this.setState({ errors: { ...this.state.errors, category: 'Необходимо выбрать тип обращения' } })\r\n          : this.setState({ errors: { ...this.state.errors, category: '' } });\r\n        break;\r\n      case 'message':\r\n        message.length < 10\r\n          ? this.setState({\r\n              errors: { ...this.state.errors, message: 'Сообщение должно содержать не менее 10 символов' },\r\n            })\r\n          : this.setState({ errors: { ...this.state.errors, message: '' } });\r\n        break;\r\n      case 'img':\r\n        imgSize > 2\r\n          ? this.setState({\r\n              errors: { ...this.state.errors, img: 'Размер изображения не должен превышать 2Мб' },\r\n            })\r\n          : this.setState({ errors: { ...this.state.errors, img: '' } });\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  // обработка изменения текстовых полей\r\n  private onTextChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\r\n    const { name: field, value } = event.target;\r\n    this.setState({ ...this.state, [field]: value.trim() }, () => this.validateField(field));\r\n  };\r\n\r\n  // обработка изменения выпадающего меню\r\n  private onSelectChnage = (event: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    const { name: field, value } = event.target;\r\n    this.validateField(field);\r\n    this.setState({ ...this.state, [field]: value }, () => this.validateField(field));\r\n  };\r\n\r\n  // обработка добавления изображения\r\n  private onImageChange = async (event: React.ChangeEvent<HTMLInputElement>): Promise<void> => {\r\n    const input = event.target;\r\n    if (input.files) {\r\n      const file = input.files[0];\r\n      await this.setState({ ...this.state, img: file }, () => {\r\n        this.validateField('img');\r\n      });\r\n      if (this.state.errors.img !== '') {\r\n        input.value = '';\r\n        this.setState({ ...this.state, img: null });\r\n      }\r\n    }\r\n  };\r\n\r\n  // проверка корректности заполнения полей\r\n  private checkFormCompletion = (): boolean => {\r\n    const errors = this.state.errors;\r\n    return !errors.email && !errors.category && !errors.message && !errors.name ? true : false;\r\n  };\r\n\r\n  private onSubmit = (event: React.FormEvent) => {\r\n    const { firstName, secondName, email, category, message, img } = this.state;\r\n    event.preventDefault();\r\n    let returnState: finalState = { firstName, secondName, email, category, message, img: null };\r\n    if (img) {\r\n      this.convertFileToBase64(img)\r\n        .then(result => {\r\n          returnState.img = result;\r\n        })\r\n        .then(() => alert(`Json для отправки на сервер: ${JSON.stringify(returnState)}`));\r\n    } else {\r\n      alert(`Json для отправки на сервер: ${JSON.stringify(returnState)}`);\r\n    }\r\n  };\r\n\r\n  convertFileToBase64 = (img: File): Promise<string | null | ArrayBuffer> => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(img);\r\n      reader.onload = () => resolve(reader.result);\r\n    });\r\n  };\r\n\r\n  public render(): React.ReactNode {\r\n    const errors = this.state.errors;\r\n    const validForm = this.checkFormCompletion();\r\n    console.log(errors);\r\n    return (\r\n      <div className=\"form-div\">\r\n        <form className=\"form\">\r\n          <div className=\"form__group\">\r\n            <label className=\"form__group-label\">Имя</label>\r\n            <input className=\"form__input form__required\" type=\"text\" name=\"firstName\" onChange={this.onTextChange} />\r\n          </div>\r\n          <div className=\"form__group\">\r\n            <label className=\"form__group-label\">Фамилия</label>\r\n            <input className=\"form__input\" type=\"text\" name=\"secondName\" onChange={this.onTextChange} />\r\n          </div>\r\n          <div className=\"form__group\">\r\n            <label className=\"form__group-label form__group-label_required\">Email</label>\r\n            <input className=\"form__input\" type=\"email\" name=\"email\" onChange={this.onTextChange} />\r\n          </div>\r\n          <div className=\"form__group\">\r\n            <label className=\"form__group-label form__group-label_required\">Тип обращения</label>\r\n            <select className=\"select\" name=\"category\" onChange={this.onSelectChnage}>\r\n              <option value=\"\" selected hidden>\r\n                Выберите тип\r\n              </option>\r\n              <option className=\"select__option\" value=\"Жалоба\">\r\n                Жалоба\r\n              </option>\r\n              <option className=\"select__option\" value=\"Благодарность\">\r\n                Благодарность\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form__group\">\r\n            <label className=\"form__group-label form__group-label_required\">Сообщение</label>\r\n            <textarea\r\n              className=\"form__input\"\r\n              name=\"message\"\r\n              placeholder=\"Оставьте здесь ваше сообщение.\"\r\n              cols={30}\r\n              rows={10}\r\n              onChange={this.onTextChange}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"form__group\">\r\n            <label className=\"form__group-label\">Изображение</label>\r\n            <input\r\n              className=\"form__input-img\"\r\n              type=\"file\"\r\n              name=\"image\"\r\n              accept=\".jpg,.jpeg,.png\"\r\n              onChange={this.onImageChange}\r\n            />\r\n          </div>\r\n          <div className=\"form__group\">\r\n            <ul className=\"form__errors\">\r\n              {Object.values(errors).map((error, i) => {\r\n                if (error !== 'empty' && error !== '') return <ErrorMessage key={i} message={error} />;\r\n              })}\r\n            </ul>\r\n          </div>\r\n\r\n          <button className=\"form__submit-button\" disabled={!validForm} onClick={this.onSubmit}>\r\n            Отправить\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormControl;\r\n","import React from 'react';\nimport './App.css';\nimport Form from './components/Form';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}